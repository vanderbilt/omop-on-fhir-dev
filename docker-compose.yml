version: "3"

volumes:
    omop-on-fhir-pg-data:
    omop-on-fhir-synthea-files:
networks:
    backend:

services:
    omop-on-fhir-pg:
        container_name: omop-on-fhir-pg
        image: omop-on-fhir-pg
        build:
            context: docker/omop-on-fhir-pg
            dockerfile: Dockerfile
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: example
            POSTGRES_DB: omop_db
            PGDATA: /var/lib/postgresql/data/pgdata
        networks:
            - backend
        volumes:
            - "omop-on-fhir-pg-data:/var/lib/postgresql/data/pgdata"
            - "${PWD}/docker/omop-on-fhir-pg/my.conf:/etc/postgresql/postgresql.conf"
            - "${PWD}/files-athena:/opt/sql/vocabulary_download"

    omop-on-fhir-adminer:
        container_name: omop-on-fhir-adminer
        image: adminer
        depends_on:
            - omop-on-fhir-pg
        environment:
            ADMINER_DEFAULT_DB_DRIVER: pgsql
            ADMINER_DEFAULT_DB_HOST: "omop-on-fhir-pg"
            ADMINER_DEFAULT_DB_NAME: "omop_db"
        networks:
            - backend
        ports:
            - "8088:8080"

    omop-on-fhir:
        build:
            context: docker/omop-on-fhir
            dockerfile: Dockerfile
            args:
                FHIR_VERSION: "${FHIR_VERSION:-dstu2}"      # this determines the repository we check out
                OOF_GH_BRANCH: "${OOF_GH_BRANCH:-master}"   # this determines which branch from the above repository we use
                MAVEN_VERSION: "${MAVEN_VERSION:-3.6.1}"    # this determines the version of the build container
                OOF_WAR_NAME: "${OOF_WAR_NAME:-omoponfhir2}"
                DB_TYPE: "${DB_TYPE:--sql}"
        container_name: omop-on-fhir
        depends_on:
            - omop-on-fhir-pg
        environment:
            JDBC_USERNAME: postgres
            JDBC_PASSWORD: example
            PG_HOST: "omop-on-fhir-pg"
            PG_PORT: "5432"
            PG_DATABASE: "omop_db"
            PG_CURRENTSCHEMA: "public"
            JDBC_URL: jdbc:postgresql://omop-on-fhir-pg:5432/omop_db
            SERVERBASE_URL: http://localhost:8080/omoponfhir2/fhir
            AUTH_BASIC: fhirguy:fhirpass
            FHIR_READONLY: "false"
        networks:
            - backend
        ports:
            - "8080:8080"

    omop-on-fhir-files:
        build:
            context: docker/generate-fhir-synthea
            dockerfile: Dockerfile
            args:
                SYNTHEA_BRANCH: "${SYNTHEA_BRANCH:-master-branch-latest}"
                SYNTHEA_FILE: "${SYNTHEA_FILE:-synthea-with-dependencies}"
                NUMBER_OF_FILES: ${NUMBER_OF_FILES:-100}
        #create docker volume to share between containers
        stdin_open: true # docker run -i
        tty: true        # docker run -t
        volumes:
            - "omop-on-fhir-synthea-files:/output/fhir"
        container_name: omop-on-fhir-files
        networks:
            - backend

    omop-on-fhir-import-fhir-json:
        container_name: omop-on-fhir-import-fhir-json
        build:
            context: docker/import-fhir-json
            dockerfile: Dockerfile
        depends_on:
            - omop-on-fhir
            - omop-on-fhir-files
        environment:
            FHIR_SERVER: "http://omop-on-fhir:8080/omoponfhir2/fhir/"
            FHIR_FOLDER: "./test"
            FHIR_AUTH_TYPE: "basic"
            FHIR_VERSION: "DSTU2"
            FHIR_DB_NAME: "db/db.sqlite"
            OMOPONFHIR_USER: "fhirguy"
            OMOPONFHIR_PASSWORD: "fhirpass"
            SLEEP_FOR: "30"
        networks:
            - backend
        volumes:
            # replace next volume with shared volume declared above
            - "omop-on-fhir-synthea-files:/app/import-fhir-json/test"
            - "${PWD}/docker/import-fhir-json/runtime:/app/import-fhir-json/db"
